


switch_branch Sym->Void :- get->Dungeon { branch=\v is_quest=false } set.

is_quest     Void->Bool :- get->Dungeon->Bool( <:  \is_quest :>).
is_not_quest Void->Bool :- get->Dungeon->Bool( <: !\is_quest :>).

choose_branch Void->Void :-
  get->Dungeon->Void( <: \branch == nil :> ?
  [ 1 5 ] dg_random_range->Int->Void(
    <: \v == 1 :> ? 'a' switch_branch;
    <: \v == 2 :> ? 'b' switch_branch;
    <: \v == 3 :> ? 'c' switch_branch;
    <: \v == 4 :> ? 'd' switch_branch;
    <: \v == 5 :> ? 'e' switch_branch)
  )
.

def [a:Sym b:Real];

generate_grid Void->Void :-
  dg_current_moon->Sym->Int(
     <: \v == 'new' || \v == 'full' :> ? 1;
     <: \v == 'first quarter' || \v == 'last quarter' :> ? -1;
     0)
  dg_grid_generate
.


def {xy:[UInt UInt] sym:Sym} XySym;

random_floor_feature Sym->Void :-
  XySym{ xy=(dg_grid_one_of_floor->[UInt UInt]) sym=\v}->Void(
    [ (\xy->UInt(\a)) (\xy->UInt(\b)) \sym ] set_feature)
.

random_water_feature Sym->Void :-
  XySym{ xy=(dg_grid_one_of_water->[UInt UInt]) sym=\v}->Void(
    [ (\xy->UInt(\a)) (\xy->UInt(\b)) \sym ] set_feature)
.

generate_founts UInt->Void :-
  <: \v > 0u :> ?
    [1 5] dg_random_range->Int
      ->Sym(
        <: \v == 1 :> ? 'C';
        <: \v == 2 :> ? 'V';
        <: \v == 3 :> ? 'B';
        <: \v == 4 :> ? 'N';
        <: \v == 5 :> ? 'M'
      ) random_water_feature
  <: \v - 1u :> generate_founts.

generate_feats Void->Void :-
  dg_grid_one_of_floor->[UInt UInt]->Void(
      [\a \b '>'] set_feature
      get->Dungeon {exit=([\a \b])} set
      [\a \b] dg_grid_add_nogen)
  fail; 
  dg_current_moon->Sym->Void(
      <: \v == 'new'  :> ? 'bb' random_floor_feature ;
      <: \v == 'full' :> ? 'dd' random_floor_feature ;
      [-1 1] dg_random_range->Int->Void(
          <: \v == -1 :> ? 's' random_floor_feature ;
          <: \v ==  0 :> ? 'b' random_floor_feature ;
          'v' random_floor_feature)
  )
  [ 3.0 1.0 0u ] pos_gauss->UInt->Void( \v generate_founts )
.


generate_map Void->Void :-
  dg__clear_map

  is_not_quest->Bool ?
    generate_grid
    generate_feats
    fail;

  dg_current_moon->Sym->Void(
    <: \v == 'full' :> ? [ 'gray' 0.6 ] dg_render_set_env;
    <: \v == 'new'  :> ? [ 'darkest_blue' 0.4 ] dg_render_set_env;
    [ 'white' 0f ] dg_render_set_env)
.


place_player Void->Void :-
  dg_grid_one_of_walk->[UInt UInt]->Void(get->Player {x=\a y=\b} set)
.


/*** *** ***/


generate Void->Void :-

  choose_branch
  generate_map
  place_player
.

