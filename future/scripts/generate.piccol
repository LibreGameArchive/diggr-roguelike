


switch_branch Sym->Void :- get->Dungeon { branch=\v is_quest=false } set.

choose_branch Void->Void :-
  get->Dungeon->Void( <: \branch == nil :> ?
  [ 1 5 ] dg_random_range->Int->Void(
    <: \v == 1 :> ? 'a' switch_branch;
    <: \v == 2 :> ? 'b' switch_branch;
    <: \v == 3 :> ? 'c' switch_branch;
    <: \v == 4 :> ? 'd' switch_branch;
    <: \v == 5 :> ? 'e' switch_branch)
  )
.

def [a:Sym b:Real];

generate_map Void->Void :-
  dg__clear_map

  get->Dungeon->Void( <: !\is_quest :> ?
    dg_current_moon->Sym->Int(
       <: \v == 'new' || \v == 'full' :> ? 1;
       <: \v == 'first quarter' || \v == 'last quarter' :> ? -1;
       0)
    dg_grid_generate)

  dg_current_moon->Sym->Void(
    <: \v == 'full' :> ? [ 'gray' 0.6 ] dg_render_set_env;
    <: \v == 'new'  :> ? [ 'darkest_blue' 0.4 ] dg_render_set_env;
    [ 'white' 0f ] dg_render_set_env)
.


place_player Void->Void :-
  dg_grid_one_of_walk->[UInt UInt]->Void(get->Player {x=\a y=\b} set)
.


/*** *** ***/


generate Void->Void :-

  choose_branch
  generate_map
  place_player
.

drawing_context Void->[UInt UInt] :-
  get->Player->[UInt UInt]([\x \y]).