
/*** ***/

def {
  
} ScreenParams;

def {
  fore: Sym
  char: Sym
  fore2: Sym
  fore_i: Bool
  is_terrain: Bool
} Skin;

def {
  ticks: UInt
  vk: Int
  c: Sym
} InState;

def {
  ticks: UInt
  done: Bool
  dead: Bool
  regenerate: Bool
  redraw: Bool
  need_input: Bool
} OutState;

def {
  px: UInt
  py: UInt
  lightradius: UInt
  hlx: UInt
  hly: UInt
  rangemin: UInt
  rangemax: UInt
  do_hud: Bool
} DrawingContext;

def {
  label: Sym
  color: Sym
  npips: Int
  pstyle: [Sym Sym]
  pcolor: [Sym Sym]
} IntHudLine;

def {
  label: Sym
  color: Sym
  npips: UInt
  pstyle: Sym
  pcolor: Sym
} UIntHudLine;


/*** ***/

def {
  x: UInt
  y: UInt
} Player;

def {
  depth: UInt
} Dungeon;

/*** ***/
 
def {
} Feat;

def {
} MonsterKey;

def {
} Monster;

def {
} MonsterVal; 

/***/

def { } ItemKey;

def {
} Item;

def {
} ItemVal;


/*** ***/

def [a:UInt b:UInt c:UInt];
def [a:OutState b:Sym];
def [a:Sym b:Bool];
def [a:Sym b:Real];
def [a:Real b:UInt];
def [a:UInt b:UInt c:UInt d:Skin];
def [a:UInt b:UInt c:UInt d:Bool];

/*** ***/

msg      Sym->Void :- [ \\ false ] dg_render_message.
msg_bold Sym->Void :- [ \\ true ] dg_render_message.

/*** ***/

max [Real Real]->Real :- <: \a > \b :> ? \b ; \a.
