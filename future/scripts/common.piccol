
def { 
  x: UInt
  y: UInt 
} Player;

def {
  level: UInt
  branch: Sym
  is_quest: Bool
  exit: [UInt UInt]
} Dungeon;


def {
  ticks: UInt
  vk: Int
  c: Sym
} InState;

def {
  ticks: UInt
  done: Bool
  dead: Bool
} OutState;

/***/


def {
  char: Sym
  color: Sym

  back: Sym
  is_lit: Bool
  walkable: Bool
  visible: Bool
} Skin;

unset Void->Skin :- Skin{char=nil color=nil}.

char Int->Sym :- \v $to_sym.


/***/


def {
  confuse
  sticky
  pois2
  shootable
  v_shrine
  s_shrine
  healingfountain
  bb_shrine
  permanent
  warm
  b_shrine

  lightbonus: Int
  explode: Int
  stairs: Int

  poison: Real
  queasy: Real
  fire: Real

  name: Sym
  special: Sym
  branch: Sym
  sign: Sym
  resource: Sym
} FeatFlags;

def {
  flags: FeatFlags
  skin: Skin
} Feat;


def { mon:Sym timeout:UInt } Summon;
def { damage:Real timeout:UInt } TimedEffect;
def { moldid:UInt chance:UInt timeout:UInt } MoldEffect;
def { num:UInt timeout:UInt } NumEffect;

def { new: UInt 
      wax_c: UInt
      q1: UInt
      wax_g: UInt
      full: UInt
      wan_g: UInt
      q2: UInt
      wan_c: UInt
    } MoonDistrib;

def {
  branch: Sym
  level: UInt

} MonsterKey;

def {
  skin: Skin

  name: Sym
  branch: Sym
  level: UInt
  desc: Sym
  count: UInt

  flavor: Sym

  psyrange: UInt
  pointscontrib: UInt
  range: UInt
  blink_away: UInt
  attack: Real
  defence: Real
  psyattack: Real
  itemdrop: Sym
  align: Sym
  pointsfac: Real
  fleerange: UInt

  summon: Summon
  bloodsucker: TimedEffect
  moldspew: MoldEffect
  summononce: NumEffect
  raise_dead: NumEffect
  moon: MoonDistrib

  straightline
  fireimmune
  static
  confimmune
  no_exting
  inanimate
  explodeimmune
  flying
  sleepattack
  fast
  is_mold
  no_a
  boulder
  selfdestruct
  stoneeating
  slow
  hungerattack
  large
  radimmune
  poisimmune
  heatseeking

} Monster;

def {
  species: Sym

  xy: [UInt UInt]
  known_p: Bool
  known_pxy: [UInt UInt]
  do_move: Bool
  do_die: Bool
  hp: Real
  confused: UInt
  glued: UInt
  visible: Bool
  visible_old: Bool
  was_seen: Bool
  onfire: Bool
  bld_delta: [Int Int]
  fleetimeout: UInt
} MonsterVal; 

/***/

def [a:Sym b:Feat];


def [a:UInt b:UInt c:UInt d:UInt];
def [x:UInt y:UInt v:Sym];
def [a:Real b:Real c:Real];
def [a:Real b:Real c:UInt];
