
def [a:[UInt UInt] b:MonsterVal];

ok UInt->OutState :- OutState{ ticks=\\ dead=false done=false need_input=true }.


/*** ***/

monster_hits [UInt UInt]->Void :-
  <:[fmt] ' HITS!! ' \a ' ' \b :> msg
.


process_monster [ [UInt UInt] MonsterVal ] -> [ [UInt UInt] MonsterVal ] :-

  \\->Void( ' BEFORE: ' print \a->a print ' ' print \a->b print '\n' print )


  /* Fails if the monster is already dead */
  \b check_alive

  /* Note! _First_ we try to walk, only then we try to give the monster a target. 
   * (The player gets a free turn.) */ 
  [ (\\ walk->[UInt UInt]) (\\ target->MonsterVal) ]

  ->[ [UInt UInt] MonsterVal ]( ' AFTER: ' print \a->a print ' ' print \a->b print '\n' print \\)
.

process_world UInt->OutState :-
  \\ ok->OutState  
.
